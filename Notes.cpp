// Записки по языку C++ (C++11)


//-----------------------------------------------------------------------------
// ПОРЯДОК СОЗДАНИЯ ПРОГРАММЫ
// 
// Исходный код  Windows (.cpp, .cxx, .cc) Linux (.C, .cc, .cxx, .cpp, .c++)
//			| 
// Компилятор
//			|
// Объектный код (.o)
//			|
//			|		 Код бибилиотеки
//			|		/ 
// Компоновщик  
//			|		\
//			|		 Код запуска
//			|
// Исполняемый код Windows (a.exe) Linux (a.out, a)
//-----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// КОММЕНТАРИЙ
//-----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// ДЕРЕКТИВЫ ПРЕПРОЦЕССОРА
// 
// #include 
// 
// #include <iostream> <- Эта дириктива заставляет препроцессор добавить
// содержимое файла "iostream" в нашу программу
// 
// 
// 
// 
// 
// 
//-----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// ЗАГОЛОВОЧНЫЕ ФАЙЛЫ
// 
// Тип заголовка  	| Соглашение			 | Пример		| Комментарии
//							|							 |					|
// Старый стиль С++  | Заканчивается на .h | iostream.h	| Используется в программах на C++
//							|							 |					|
// Старый стиль C		| Заканчивается на .h | math.h		| Используетс в программа на С и С++				
//							|							 |					|
// Новый стиль C++	| Без расширения		 | iostream    | Используется в программах на С++,
//							|							 |					| использует пространство имен std
//							|							 |					|
// Переобразованный С| Префикс "с", без    | cmath       | Используется в программах на C++,
//							| расширения          |					| может использовать средства, не
//							|							 |					| характерные для С, такие как
//							|							 |					| пространство имен std
//-----------------------------------------------------------------------------

//-----------------------------------------------------------------------------
// ПРОСТРАСТВО ИМЕН
// 
// Деректива "using"
// 
// Пример -> "using namespace std;" все пространства имен std (для ленивых подход)
// 
// Пример: (для нормальных подход)
// "using std::cout;" -> делает доступным cout
// "using std::endl;" -> делает доступным endl
// "using std::cin;" -> делает доступным cin
// 
// 
// 
// 
// 
// 
//
//-----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// ВЫВОД
// 
// Пример -> cout << "Hello, world!"
// 
// Конкатенация cout
// 
// Пример -> cout << "Hello, world!" << "Hello, world!" << "Hello, world!"
// 
// Манипуляторы
// 
// endl - переход на новую строку
// Пример -> cout << "Hello, world!" << endl
// 
// 
// Упрвляющие последовательности
// 
// \n - переход на новую строку
// Пример -> cout << "Hello, world!\n"
// 
//-----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// ВВОД
// 
// Пример -> cin >> имя переменной
// 
// 
// 
// 
//
//-----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// ФУНКЦИИ
// 
// 
// Пример:
// 
// int function()
// {
// ...
// }
// 
// int function() <- портотип функции
// 
// Пример в коде:
// 
// #include <iostream>
// int function1(int); <- портотип функции1
// int function2(int); <- портотип функции2
// 
// int main() <- точка входа
// {
// ...
// function1(int); <- используем функцию1
// ...
// function2(int); <- используем функцию2
// ...
// }
// 
// int function1(int) <- определяем функцию1
// {
// ...
// }
// 
// int function2(int) <- определяем функцию2
// {
// ...
// return int
// }
// 
// 
// 
//-----------------------------------------------------------------------------






















//-----------------------------------------------------------------------------
// ТИПЫ ДАННЫХ

// Числа с плавающей точкой:
// float - 4 байта 
// double - 8 байт

// Целые числа:
// short - 2 байта
// int - 4 байта
// long - 4 байта
// long long - 8 байт

// Символьный тип:
// char - 1 байт

// Логический тип:
// bool - 1 байт
// ----------------------------------------------------------------------------


// КОНСТАНТЫ
//
// 
// 
//
// 
// ОПЕРАТОРЫ
// 
// 
// ПРЕОРИТЕТЫ
// 
// ФУНКЦИИ (Тема портотипы)
// 
// СТИЛЬ НАПИСАНИЯ КОДА
//